MEMORY {
    ZP:     start = $08, size = $f8, type = rw;
    # use first $08 zero page locations as locals
    HEADER: start = 0, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
    RAM:    start = $0300, size = $0500, type = rw;
    ROM7:   start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
    CHRROM: start = $0000, size = $2000, type = ro, file = %O, fill=yes, fillval=$FF;
}

SEGMENTS {
    INESHDR:  load = HEADER, type = ro, align = $10;
    ZEROPAGE: load = ZP, type = zp;
    BSS:      load = RAM, type = bss, define = yes, align = $100;
    CODE:     load = ROM7, type = ro, align = $100;
    RODATA:   load = ROM7, type = ro, align = $100;
    VECTORS:  load = ROM7, type = ro, start = $FFFA;
    CHR:      load = CHRROM, type = ro, align = 16, optional = yes;
}

FILES {
    %O: format = bin;
}

